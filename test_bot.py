#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram
"""

import asyncio
from unittest.mock import Mock, AsyncMock
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PATH –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ main
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

async def test_bot_functions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞"""

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π Telegram –±–æ—Ç–∞...")
    print("=" * 50)

    # –ú–æ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç—ã Telegram
    mock_message = Mock()
    mock_message.chat.id = 123456789
    mock_message.text = "/start"
    mock_message.answer = AsyncMock()

    mock_callback = Mock()
    mock_callback.data = "contacts"
    mock_callback.message = mock_message
    mock_callback.answer = AsyncMock()
    mock_callback.message.edit_text = AsyncMock()

    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ bot_functions.py
        from bot_functions import (
            get_start_message, get_catalog_message, get_search_message,
            get_callback_response, search_by_text, get_menu_button_config
        )

        print("‚úÖ –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π —É—Å–ø–µ—à–µ–Ω")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start...")
        start_data = get_start_message()
        assert "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" in start_data["text"]
        assert len(start_data["buttons"]) > 0
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start —Ä–∞–±–æ—Ç–∞–µ—Ç")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /catalog
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /catalog...")
        catalog_data = get_catalog_message()
        assert "–ö–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π" in catalog_data["text"]
        assert len(catalog_data["buttons"]) > 0
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /catalog —Ä–∞–±–æ—Ç–∞–µ—Ç")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /search
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /search...")
        search_data = get_search_message()
        assert "–ü–æ–∏—Å–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π" in search_data["text"]
        assert len(search_data["buttons"]) > 0
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /search —Ä–∞–±–æ—Ç–∞–µ—Ç")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback'–æ–≤
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–æ–∫...")
        contacts_data = get_callback_response("contacts")
        about_data = get_callback_response("about")
        help_data = get_callback_response("help")
        assert contacts_data and "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã" in contacts_data["text"]
        assert about_data and "–û –Ω–∞—à–µ–º –∞–≤—Ç–æ–ª–æ–º–±–∞—Ä–¥–µ" in about_data["text"]
        assert help_data and "–°–ø—Ä–∞–≤–∫–∞" in help_data["text"]
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫...")
        bmw_search = search_by_text("BMW")
        toyota_search = search_by_text("Toyota")
        unknown_search = search_by_text("Unknown brand")
        assert "BMW" in bmw_search["text"]
        assert "Toyota" in toyota_search["text"]
        assert "–Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏" in unknown_search["text"].lower()
        print("‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–µ–Ω—é
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é...")
        menu_config = get_menu_button_config()
        assert "–ö–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ" in menu_config["text"]
        assert "web_app_url" in menu_config
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–µ–Ω—é —Ä–∞–±–æ—Ç–∞–µ—Ç")

        print("\n" + "=" * 50)
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ Inline –∫–Ω–æ–ø–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç")
        print("‚úÖ –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ Web App –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")

        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞!")

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

    return True

async def test_webapp_urls():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ URL'–æ–≤ –¥–ª—è Web App"""

    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Web App URL'–æ–≤...")

    webapp_url = os.getenv("WEBAPP_URL", "http://localhost:1313")

    test_urls = [
        f"{webapp_url}",
        f"{webapp_url}/cars/",
        f"{webapp_url}/cars/?brand=BMW",
        f"{webapp_url}/cars/?brand=Toyota&model=Camry"
    ]

    print(f"üìã Base URL: {webapp_url}")
    print("üìã Test URLs:")
    for url in test_urls:
        print(f"   ‚Ä¢ {url}")

    print("‚úÖ URL'—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""

    print("ü§ñ –¢–µ—Å—Ç Telegram Bot –¥–ª—è –ê–≤—Ç–æ–ª–æ–º–±–∞—Ä–¥–∞")
    print("üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram")
    print("=" * 60)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ["BOT_TOKEN"] = "TEST_TOKEN"
    os.environ["WEBAPP_URL"] = "http://localhost:1313"

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        result = asyncio.run(test_bot_functions())
        asyncio.run(test_webapp_urls())

        if result:
            print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print("1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather")
            print("2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ .env")
            print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Hugo —Å–µ—Ä–≤–µ—Ä: cd hugo-site && hugo server")
            print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python run_bot.py")
            print("5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ Telegram")
        else:
            print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
            sys.exit(1)

    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
