#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –ê–≤–∏—Ç–æ (—Å –∑–∞—Ö–æ–¥–æ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–∏)
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from avito_parser import AvitoParser

def test_detailed_parsing():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å –∑–∞—Ö–æ–¥–æ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –ê–≤–∏—Ç–æ")
    print("=" * 50)

    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    parser = AvitoParser(headless=False)

    # –¢–µ—Å—Ç–æ–≤—ã–π URL (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, —Ä–µ–∞–ª—å–Ω—ã–π URL –≤ main —Ñ—É–Ω–∫—Ü–∏–∏)
    test_url = "https://www.avito.ru/brands/be5f12b20964ea30a159d92acf5074cb?gdlkerfdnwq=101&page_from=from_item_header&iid=7526372017&page_from=from_item_card&iid=7526372017"

    print(f"üîó URL: {test_url}")
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –∑–∞–π–º–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —Ç–∞–∫ –∫–∞–∫ –ø–∞—Ä—Å–µ—Ä –∑–∞—Ö–æ–¥–∏—Ç –≤ –∫–∞–∂–¥—É—é –∫–∞—Ä—Ç–æ—á–∫—É")
    print("üñºÔ∏è  –ë—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    print("üìù –ë—É–¥—É—Ç –ø–æ–ª—É—á–µ–Ω—ã –ø–æ–ª–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è")

    answer = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").lower()

    if answer in ['y', 'yes', '–¥–∞', '–¥']:
        try:
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Å—Ç–∞
            print("üî¨ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –ø–µ—Ä–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
            parser.parse_avito_page(test_url)

            if parser.cars_data:
                print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:")
                for i, car in enumerate(parser.cars_data[:3], 1):
                    print(f"\n{i}. {car.brand} {car.model} {car.year}")
                    print(f"   üí∞ –¶–µ–Ω–∞: {car.price:,} ‚ÇΩ")
                    print(f"   üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(car.images) if car.images else 0}")
                    print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {car.description[:100]}...")
                    if car.vin:
                        print(f"   üî¢ VIN: {car.vin}")

                save = input(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å {len(parser.cars_data)} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π? (y/n): ").lower()
                if save in ['y', 'yes', '–¥–∞', '–¥']:
                    parser.save_to_hugo("../hugo-site/content/cars")
                    parser.save_to_json("detailed_test_results.json")
                    print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
            else:
                print("‚ùå –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

        except KeyboardInterrupt:
            print("\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        print("‚ùå –¢–µ—Å—Ç –æ—Ç–º–µ–Ω–µ–Ω")

if __name__ == "__main__":
    test_detailed_parsing()
