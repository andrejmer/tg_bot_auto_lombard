#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
"""

import os
from pathlib import Path
from PIL import Image

def optimize_images(images_dir: str = "hugo-site/static/images/cars"):
    """–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    images_path = Path(images_dir)

    if not images_path.exists():
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {images_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    print(f"üñºÔ∏è  –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ {images_dir}")

    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    supported_formats = {'.jpg', '.jpeg', '.png', '.bmp', '.tiff'}

    for image_file in images_path.glob('*'):
        if image_file.suffix.lower() in supported_formats:
            try:
                print(f"üì∑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {image_file.name}")

                # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                with Image.open(image_file) as img:
                    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                    if img.mode in ('RGBA', 'LA'):
                        background = Image.new('RGB', img.size, (255, 255, 255))
                        background.paste(img, mask=img.split()[-1] if img.mode == 'RGBA' else None)
                        img = background
                    elif img.mode != 'RGB':
                        img = img.convert('RGB')

                    # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ
                    max_width = 800
                    max_height = 600

                    if img.width > max_width or img.height > max_height:
                        img.thumbnail((max_width, max_height), Image.Resampling.LANCZOS)
                        print(f"  üìè –ò–∑–º–µ–Ω–µ–Ω —Ä–∞–∑–º–µ—Ä –¥–æ {img.width}x{img.height}")

                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ WebP
                    webp_file = image_file.with_suffix('.webp')
                    img.save(webp_file, 'WebP', quality=85, optimize=True)

                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞–∫–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é JPEG –≤–µ—Ä—Å–∏—é
                    if image_file.suffix.lower() != '.jpg':
                        jpg_file = image_file.with_suffix('.jpg')
                        img.save(jpg_file, 'JPEG', quality=85, optimize=True)
                    else:
                        # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π JPEG
                        img.save(image_file, 'JPEG', quality=85, optimize=True)

                    # –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
                    original_size = image_file.stat().st_size
                    webp_size = webp_file.stat().st_size if webp_file.exists() else 0

                    print(f"  üíæ –ò—Å—Ö–æ–¥–Ω—ã–π: {original_size//1024}KB ‚Üí WebP: {webp_size//1024}KB")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {image_file.name}: {e}")

    print("‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    try:
        from PIL import Image
        optimize_images()
    except ImportError:
        print("‚ùå Pillow –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install Pillow")
