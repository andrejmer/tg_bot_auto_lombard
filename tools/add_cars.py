#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ Hugo –∫–∞—Ç–∞–ª–æ–≥.
–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª—ã .md —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
"""

import os
import datetime
from pathlib import Path

def create_car_file(car_data):
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
    filename = f"{car_data['brand'].lower().replace('-', '').replace(' ', '-')}-{car_data['model'].lower().replace(' ', '-').replace('/', '-')}-{car_data['year']}.md"
    filepath = Path("../hugo-site/content/cars") / filename

    # –®–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∞
    template = f"""---
title: "{car_data['brand']} {car_data['model']} {car_data['year']}"
date: {datetime.datetime.now().strftime('%Y-%m-%dT%H:%M:%S+03:00')}
draft: false
image: "images/cars/placeholder.svg"

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û! –≠—Ç–∏ –ø–æ–ª—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
brand: "{car_data['brand']}"
model: "{car_data['model']}"

year: {car_data['year']}
price: {car_data['price']}
mileage: {car_data.get('mileage', 50000)}
engine_volume: {car_data.get('engine_volume', '2.0')}
fuel_type: "{car_data.get('fuel_type', '–ë–µ–Ω–∑–∏–Ω')}"
transmission: "{car_data.get('transmission', 'AT')}"
drive_type: "{car_data.get('drive_type', '–ü–µ—Ä–µ–¥–Ω–∏–π')}"
body_type: "{car_data.get('body_type', '–°–µ–¥–∞–Ω')}"
color: "{car_data.get('color', '–ë–µ–ª—ã–π')}"
condition: "{car_data.get('condition', '–•–æ—Ä–æ—à–µ–µ')}"
vin: "{car_data.get('vin', 'XXXXXXXXXXXXXXXXX')}"
owners_count: {car_data.get('owners_count', 1)}
pts_original: {str(car_data.get('pts_original', True)).lower()}
customs_cleared: {str(car_data.get('customs_cleared', True)).lower()}
exchange_possible: {str(car_data.get('exchange_possible', True)).lower()}
credit_available: {str(car_data.get('credit_available', True)).lower()}
description: "{car_data.get('description', f'{car_data["brand"]} {car_data["model"]} {car_data["year"]} –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏')}"
tags: {car_data.get('tags', '["–∞–≤—Ç–æ–º–æ–±–∏–ª—å"]')}
weight: {car_data.get('weight', 1)}
---

## –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ {car_data['brand']} {car_data['model']} {car_data['year']}

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –ó–Ω–∞—á–µ–Ω–∏–µ |
|----------|----------|
| **–ú–∞—Ä–∫–∞** | {car_data['brand']} |
| **–ú–æ–¥–µ–ª—å** | {car_data['model']} |
| **–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞** | {car_data['year']} |
| **–¶–µ–Ω–∞** | {car_data['price']:,} ‚ÇΩ |
| **–ü—Ä–æ–±–µ–≥** | {car_data.get('mileage', 50000):,} –∫–º |
| **–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è** | {car_data.get('engine_volume', '2.0')} –ª |
| **–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞** | {car_data.get('fuel_type', '–ë–µ–Ω–∑–∏–Ω')} |
| **–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á** | {car_data.get('transmission', 'AT')} |
| **–ü—Ä–∏–≤–æ–¥** | {car_data.get('drive_type', '–ü–µ—Ä–µ–¥–Ω–∏–π')} |
| **–¢–∏–ø –∫—É–∑–æ–≤–∞** | {car_data.get('body_type', '–°–µ–¥–∞–Ω')} |
| **–¶–≤–µ—Ç** | {car_data.get('color', '–ë–µ–ª—ã–π')} |
| **–°–æ—Å—Ç–æ—è–Ω–∏–µ** | {car_data.get('condition', '–•–æ—Ä–æ—à–µ–µ')} |

## –û–ø–∏—Å–∞–Ω–∏–µ

{car_data.get('description', f'{car_data["brand"]} {car_data["model"]} {car_data["year"]} –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.')}

### –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è:
{car_data.get('equipment', '- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è')}

### –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:
{car_data.get('technical_condition', '- –ê–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –∏—Å–ø—Ä–∞–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏')}

**{car_data.get('additional_info', '–í–æ–∑–º–æ–∂–µ–Ω –æ–±–º–µ–Ω, –∫—Ä–µ–¥–∏—Ç, –ª–∏–∑–∏–Ω–≥.')}**
"""

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    filepath.parent.mkdir(parents=True, exist_ok=True)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    with open(filepath, 'w', encoding='utf-8') as f:
        f.write(template)

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {filepath}")
    return filepath

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –≤–∞—à–∏—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    cars_to_add = [
        {
            "brand": "BMW",
            "model": "X7",
            "year": 2021,
            "price": 4500000,
            "mileage": 35000,
            "fuel_type": "–ë–µ–Ω–∑–∏–Ω",
            "body_type": "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫",
            "color": "–ß–µ—Ä–Ω—ã–π",
            "description": "BMW X7 2021 –≥–æ–¥–∞ –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ü–æ–ª–Ω–∞—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è."
        },
        {
            "brand": "Mercedes-Benz",
            "model": "GLE",
            "year": 2020,
            "price": 4200000,
            "mileage": 28000,
            "fuel_type": "–î–∏–∑–µ–ª—å",
            "body_type": "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫",
            "color": "–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π"
        },
        {
            "brand": "Audi",
            "model": "Q7",
            "year": 2019,
            "price": 3800000,
            "mileage": 45000,
            "fuel_type": "–ë–µ–Ω–∑–∏–Ω",
            "body_type": "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫",
            "color": "–ë–µ–ª—ã–π"
        }
    ]

    print("üöó –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥...")
    for car in cars_to_add:
        create_car_file(car)

    print("\nüéâ –ì–æ—Ç–æ–≤–æ! –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ hugo-site/content/cars/")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: hugo --source hugo-site")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ models-data.json")
    print("4. –ó–∞–¥–µ–ø–ª–æ–π—Ç–µ: git add . && git commit -m 'Add new cars' && git push")
