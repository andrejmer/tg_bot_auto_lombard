#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ JSON –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ Markdown —Ñ–∞–π–ª—ã Hugo
"""

import json
import os
import re
from datetime import datetime
from pathlib import Path

def slugify(text):
    """–°–æ–∑–¥–∞–µ—Ç URL-friendly slug –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    text = text.lower()
    text = re.sub(r'[^\w\s-]', '', text)
    text = re.sub(r'[-\s]+', '-', text)
    return text.strip('-')

def format_price(price):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏"""
    return f"{price:,}".replace(',', ' ')

def convert_cars_to_hugo():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç JSON –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ Markdown —Ñ–∞–π–ª—ã Hugo"""

    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    json_file = Path('web/assets/data/cars.json')
    output_dir = Path('hugo-site/content/cars')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ JSON —Ñ–∞–π–ª–∞
    if not json_file.exists():
        print(f"‚ùå –§–∞–π–ª {json_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É
    output_dir.mkdir(parents=True, exist_ok=True)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    with open(json_file, 'r', encoding='utf-8') as f:
        cars = json.load(f)

    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(cars)} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏...")

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å
    for i, car in enumerate(cars, 1):
        try:
            # –°–æ–∑–¥–∞–µ–º slug –¥–ª—è URL
            slug = slugify(f"{car['brand']}-{car['model']}-{car['year']}")
            filename = f"{slug}.md"
            file_path = output_dir / filename

            # –°–æ–∑–¥–∞–µ–º Front Matter
            front_matter = f"""---
title: "{car['brand']} {car['model']} {car['year']}"
date: {car['created_at']}
draft: false

# –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
brand: "{car['brand']}"
model: "{car['model']}"
year: {car['year']}
price: {car['price']}
currency: "{car['currency']}"
mileage: {car['mileage']}

# –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
engine:
  volume: "{car['engine']['volume']}"
  type: "{car['engine']['type']}"
  power: {car['engine']['power']}
transmission: "{car['transmission']}"
drive: "{car['drive']}"
body: "{car['body']}"
color: "{car['color']}"
condition: "{car['condition']}"
vin: "{car['vin']}"

# –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
images:"""

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            for image in car['images']:
                front_matter += f'\n  - "{image}"'

            # –î–æ–±–∞–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            front_matter += f"""

# –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
features:"""
            for feature in car['features']:
                front_matter += f'\n  - "{feature}"'

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
            front_matter += f"""

# –ö–æ–Ω—Ç–∞–∫—Ç—ã
contact:
  manager: "{car['contacts']['manager']}"
  phone: "{car['contacts']['phone']}"
  telegram: "{car['contacts']['telegram']}"

# –õ–æ–∫–∞—Ü–∏—è
location:
  city: "{car['location']['city']}"
  address: "{car['location']['address']}"

# SEO
description: "{car['brand']} {car['model']} {car['year']} - {format_price(car['price'])} ‚ÇΩ. {car['description'][:100]}..."
keywords: ["{car['brand']}", "{car['model']}", "{car['year']}", "–∞–≤—Ç–æ–ª–æ–º–±–∞—Ä–¥", "{car['body'].lower()}"]

# –°—Ç–∞—Ç—É—Å –∏ –º–µ—Ç–∫–∏
status: "{car['status']}"
featured: {'true' if i <= 3 else 'false'}  # –ü–µ—Ä–≤—ã–µ 3 –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∫–∞–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ

# –¢–∞–∫—Å–æ–Ω–æ–º–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
brands: ["{car['brand']}"]
body_types: ["{car['body']}"]
fuel_types: ["{car['engine']['type']}"]
conditions: ["{car['condition']}"]

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
created_at: "{car['created_at']}"
updated_at: "{car['updated_at']}"
car_id: "{car['id']}"
---"""

            # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
            content = f"""
{car['description']}

## –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –ó–Ω–∞—á–µ–Ω–∏–µ |
|----------|----------|
| **–ú–∞—Ä–∫–∞** | {car['brand']} |
| **–ú–æ–¥–µ–ª—å** | {car['model']} |
| **–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞** | {car['year']} |
| **–ü—Ä–æ–±–µ–≥** | {format_price(car['mileage'])} –∫–º |
| **–î–≤–∏–≥–∞—Ç–µ–ª—å** | {car['engine']['volume']}L {car['engine']['type']} |
| **–ú–æ—â–Ω–æ—Å—Ç—å** | {car['engine']['power']} –ª.—Å. |
| **–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á** | {car['transmission']} |
| **–ü—Ä–∏–≤–æ–¥** | {car['drive']} |
| **–¢–∏–ø –∫—É–∑–æ–≤–∞** | {car['body']} |
| **–¶–≤–µ—Ç** | {car['color']} |
| **–°–æ—Å—Ç–æ—è–Ω–∏–µ** | {car['condition']} |
| **VIN** | `{car['vin']}` |

## –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –∏ –æ–ø—Ü–∏–∏

–ê–≤—Ç–æ–º–æ–±–∏–ª—å –æ—Å–Ω–∞—â–µ–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ –æ–ø—Ü–∏—è–º–∏:

"""

            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–ø—Ü–∏–π
            for feature in car['features']:
                content += f"- ‚úÖ **{feature}**\n"

            content += f"""

## –¶–µ–Ω–∞ –∏ —É—Å–ª–æ–≤–∏—è

üí∞ **–¶–µ–Ω–∞**: **{format_price(car['price'])} ‚ÇΩ**

### –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å:
- –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
- –ü—Ä–æ–≤–µ—Ä–∫–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —á–∏—Å—Ç–æ—Ç—ã
- –ü–æ–º–æ—â—å –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

### –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- üí≥ –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∏–ª–∏ –∫–∞—Ä—Ç–æ–π
- üìÑ –ü–æ–º–æ—â—å —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∫—Ä–µ–¥–∏—Ç–∞
- üöó –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å trade-in
- üìã –ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

## –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏

–•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:

üë§ **–ú–µ–Ω–µ–¥–∂–µ—Ä**: {car['contacts']['manager']}
üìû **–¢–µ–ª–µ—Ñ–æ–Ω**: [{car['contacts']['phone']}](tel:{car['contacts']['phone'].replace(' ', '').replace('(', '').replace(')', '').replace('-', '')})
üí¨ **Telegram**: [{car['contacts']['telegram']}](https://t.me/{car['contacts']['telegram'][1:]})

üìç **–ê–¥—Ä–µ—Å —Å–∞–ª–æ–Ω–∞**: {car['location']['city']}, {car['location']['address']}
üïê **–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã**: –ü–ù-–í–° —Å 9:00 –¥–æ 21:00

### –ö–∞–∫ –∫—É–ø–∏—Ç—å —ç—Ç–æ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å?

1. **–°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º** –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ –≤ Telegram
2. **–ü—Ä–∏–µ–∑–∂–∞–π—Ç–µ –Ω–∞ –æ—Å–º–æ—Ç—Ä** –≤ –Ω–∞—à –∞–≤—Ç–æ—Å–∞–ª–æ–Ω
3. **–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç-–¥—Ä–∞–π–≤** –∏ —É–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ
4. **–û—Ñ–æ—Ä–º–∏—Ç–µ —Å–¥–µ–ª–∫—É** —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤

---

*–ê–≤—Ç–æ–º–æ–±–∏–ª—å —Ä–∞–∑–º–µ—â–µ–Ω: {datetime.fromisoformat(car['created_at'].replace('Z', '+00:00')).strftime('%d.%m.%Y')}*
*–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.fromisoformat(car['updated_at'].replace('Z', '+00:00')).strftime('%d.%m.%Y')}*
"""

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
            full_content = front_matter + content
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(full_content)

            print(f"‚úÖ {i:2d}/6: {car['brand']} {car['model']} {car['year']} ‚Üí {filename}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è {car.get('id', 'unknown')}: {e}")
            return False

    print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(cars)} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π!")
    print(f"üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_dir}")

    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöó –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è JSON –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ Hugo Markdown...")
    print("=" * 50)

    if convert_cars_to_hugo():
        print("\n‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. cd hugo-site")
        print("2. hugo server")
        print("3. –û—Ç–∫—Ä—ã—Ç—å http://localhost:1313")
    else:
        print("\n‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        return 1

    return 0

if __name__ == "__main__":
    exit(main())
